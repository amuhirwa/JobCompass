# Generated by Django 5.2.5 on 2025-09-02 14:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ModelInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid_history', models.TextField(help_text='Comma-separated list of UUIDs')),
                ('name', models.CharField(max_length=255)),
                ('locale', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True)),
                ('version', models.CharField(max_length=50)),
                ('released', models.BooleanField(default=False)),
                ('release_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Occupation',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('uuid_history', models.TextField(help_text='Comma-separated list of UUIDs')),
                ('origin_uri', models.URLField(blank=True, max_length=4096, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('occupation_group_code', models.CharField(max_length=20)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('preferred_label', models.CharField(max_length=255)),
                ('alt_labels', models.TextField(blank=True, help_text='Pipe-separated alternative labels')),
                ('description', models.TextField(blank=True, max_length=4000)),
                ('definition', models.TextField(blank=True, max_length=4000)),
                ('scope_note', models.TextField(blank=True, max_length=4000)),
                ('regulated_profession_note', models.TextField(blank=True, max_length=4000)),
                ('occupation_type', models.CharField(choices=[('escooccupation', 'ESCO Occupation'), ('localoccupation', 'Local Occupation')], max_length=20)),
                ('is_localized', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OccupationGroup',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('uuid_history', models.TextField(help_text='Comma-separated list of UUIDs')),
                ('origin_uri', models.URLField(blank=True, max_length=4096, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('group_type', models.CharField(choices=[('iscogroup', 'ISCO Group'), ('localgroup', 'Local Group')], max_length=15)),
                ('preferred_label', models.CharField(max_length=255)),
                ('alt_labels', models.TextField(blank=True, help_text='Pipe-separated alternative labels')),
                ('description', models.TextField(blank=True, max_length=4000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('uuid_history', models.TextField(help_text='Comma-separated list of UUIDs')),
                ('origin_uri', models.URLField(blank=True, max_length=4096, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('skill_type', models.CharField(blank=True, choices=[('skill/competence', 'Skill/Competence'), ('knowledge', 'Knowledge'), ('language', 'Language'), ('attitude', 'Attitude'), ('', 'Not Specified')], max_length=20)),
                ('reuse_level', models.CharField(blank=True, choices=[('sector-specific', 'Sector Specific'), ('occupation-specific', 'Occupation Specific'), ('cross-sector', 'Cross Sector'), ('transversal', 'Transversal'), ('', 'Not Specified')], max_length=20)),
                ('preferred_label', models.CharField(max_length=255)),
                ('alt_labels', models.TextField(blank=True, help_text='Pipe-separated alternative labels')),
                ('description', models.TextField(blank=True, max_length=4000)),
                ('definition', models.TextField(blank=True, max_length=4000)),
                ('scope_note', models.TextField(blank=True, max_length=4000)),
                ('is_localized', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SkillGroup',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('uuid_history', models.TextField(help_text='Comma-separated list of UUIDs')),
                ('origin_uri', models.URLField(blank=True, max_length=4096, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('preferred_label', models.CharField(max_length=255)),
                ('alt_labels', models.TextField(blank=True, help_text='Pipe-separated alternative labels')),
                ('description', models.TextField(blank=True, max_length=4000)),
                ('scope_note', models.TextField(blank=True, max_length=4000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OccupationHierarchy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_object_type', models.CharField(choices=[('occupationgroup', 'Occupation Group'), ('escooccupation', 'ESCO Occupation'), ('localoccupation', 'Local Occupation')], max_length=20)),
                ('parent_id', models.CharField(max_length=100)),
                ('child_object_type', models.CharField(choices=[('occupationgroup', 'Occupation Group'), ('escooccupation', 'ESCO Occupation'), ('localoccupation', 'Local Occupation')], max_length=20)),
                ('child_id', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('parent_object_type', 'parent_id', 'child_object_type', 'child_id')},
            },
        ),
        migrations.CreateModel(
            name='SkillHierarchy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_object_type', models.CharField(choices=[('skill', 'Skill'), ('skillgroup', 'Skill Group')], max_length=15)),
                ('parent_id', models.CharField(max_length=100)),
                ('child_object_type', models.CharField(choices=[('skill', 'Skill'), ('skillgroup', 'Skill Group')], max_length=15)),
                ('child_id', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('parent_object_type', 'parent_id', 'child_object_type', 'child_id')},
            },
        ),
        migrations.CreateModel(
            name='OccupationToSkillRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.CharField(blank=True, choices=[('essential', 'Essential'), ('optional', 'Optional'), ('', 'Not Specified')], max_length=10)),
                ('signalling_value_label', models.CharField(blank=True, choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('', 'Not Specified')], max_length=10)),
                ('signalling_value', models.DecimalField(blank=True, decimal_places=2, help_text='Value between 0 and 1', max_digits=3, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('occupation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_relations', to='taxonomy.occupation')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occupation_relations', to='taxonomy.skill')),
            ],
            options={
                'unique_together': {('occupation', 'skill')},
            },
        ),
        migrations.CreateModel(
            name='SkillToSkillRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.CharField(choices=[('essential', 'Essential'), ('optional', 'Optional')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('required_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requiring_skills', to='taxonomy.skill')),
                ('requiring_skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='required_skills', to='taxonomy.skill')),
            ],
            options={
                'unique_together': {('requiring_skill', 'required_skill')},
            },
        ),
    ]
